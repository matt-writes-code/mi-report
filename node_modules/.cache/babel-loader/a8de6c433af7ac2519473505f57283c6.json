{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Matt\\\\Documents\\\\Gatsby\\\\mi-report\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Matt\\\\Documents\\\\Gatsby\\\\mi-report\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Matt\\\\Documents\\\\Gatsby\\\\mi-report\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Matt\\\\Documents\\\\Gatsby\\\\mi-report\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Matt\\\\Documents\\\\Gatsby\\\\mi-report\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Matt\\\\Documents\\\\Gatsby\\\\mi-report\\\\src\\\\charts\\\\pie-chart.js\";\nimport React from \"react\";\nimport Chart from \"react-google-charts\";\nimport { Spinner } from 'reactstrap';\nvar piechartdata = \"https://api.myjson.com/bins/zc2u9\";\nvar oridata = [[\"Task\", \"Hours per Day\"], [\"Alert closures\", 11], [\"Reports\", 2], [\"Trainings\", 2], [\"Meetings\", 2], [\"Exception handling\", 7]];\n\nvar PieChart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PieChart, _React$Component);\n\n  function PieChart(props) {\n    var _this;\n\n    _classCallCheck(this, PieChart);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PieChart).call(this, props));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(PieChart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"\".concat(piechartdata)).then(function (d) {\n        return d.json();\n      }).then(function (result) {\n        _this2.setState({\n          data: result\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Chart, {\n        width: \"100%\",\n        height: \"350px\",\n        chartType: \"PieChart\",\n        loader: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(Spinner, {\n          color: \"info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        })),\n        data: data,\n        options: {\n          title: \"Daily Activities\",\n          // Just add this option\n          pieHole: 0.6,\n          backgroundColor: \"black\",\n          titleTextStyle: {\n            color: \"white\"\n          },\n          legendTextStyle: {\n            color: \"white\"\n          },\n          legend: {\n            position: \"top\",\n            maxLines: \"5\"\n          }\n        },\n        rootProps: {\n          \"data-testid\": \"3\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return PieChart;\n}(React.Component);\n\nexport { PieChart as default };","map":{"version":3,"sources":["C:\\Users\\Matt\\Documents\\Gatsby\\mi-report\\src\\charts\\pie-chart.js"],"names":["React","Chart","Spinner","piechartdata","oridata","PieChart","props","state","data","fetch","then","d","json","result","setState","title","pieHole","backgroundColor","titleTextStyle","color","legendTextStyle","legend","position","maxLines","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,OAAT,QAAwB,YAAxB;AAEA,IAAMC,YAAY,GAAG,mCAArB;AACA,IAAMC,OAAO,GAAG,CACd,CAAC,MAAD,EAAS,eAAT,CADc,EAEd,CAAC,gBAAD,EAAmB,EAAnB,CAFc,EAGd,CAAC,SAAD,EAAY,CAAZ,CAHc,EAId,CAAC,WAAD,EAAc,CAAd,CAJc,EAKd,CAAC,UAAD,EAAa,CAAb,CALc,EAMd,CAAC,oBAAD,EAAuB,CAAvB,CANc,CAAhB;;IASqBC,Q;;;;;AACnB,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAFiB;AAKlB;;;;wCAEmB;AAAA;;AAClBC,MAAAA,KAAK,WAAIN,YAAJ,EAAL,CACGO,IADH,CACQ,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,OADT,EAEGF,IAFH,CAEQ,UAAAG,MAAM,EAAI;AACd,QAAA,MAAI,CAACC,QAAL,CAAc;AACZN,UAAAA,IAAI,EAAEK;AADM,SAAd;AAGD,OANH;AAOD;;;6BAEQ;AAAA,UACCL,IADD,GACU,KAAKD,KADf,CACCC,IADD;AAEP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD;AACE,QAAA,KAAK,EAAE,MADT;AAEE,QAAA,MAAM,EAAE,OAFV;AAGE,QAAA,SAAS,EAAC,UAHZ;AAIE,QAAA,MAAM,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAK,oBAAC,OAAD;AAAS,UAAA,KAAK,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAL,CAJV;AAKE,QAAA,IAAI,EAAEA,IALR;AAME,QAAA,OAAO,EAAE;AACPO,UAAAA,KAAK,EAAE,kBADA;AAEP;AACAC,UAAAA,OAAO,EAAE,GAHF;AAIPC,UAAAA,eAAe,EAAE,OAJV;AAKPC,UAAAA,cAAc,EAAE;AAAEC,YAAAA,KAAK,EAAE;AAAT,WALT;AAMPC,UAAAA,eAAe,EAAE;AAAED,YAAAA,KAAK,EAAE;AAAT,WANV;AAOPE,UAAAA,MAAM,EAAE;AAAEC,YAAAA,QAAQ,EAAE,KAAZ;AAAmBC,YAAAA,QAAQ,EAAE;AAA7B;AAPD,SANX;AAeE,QAAA,SAAS,EAAE;AAAE,yBAAe;AAAjB,SAfb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF;AAqBD;;;;EAzCmCvB,KAAK,CAACwB,S;;SAAvBnB,Q","sourcesContent":["import React from \"react\";\r\nimport Chart from \"react-google-charts\";\r\nimport { Spinner } from 'reactstrap';\r\n\r\nconst piechartdata = \"https://api.myjson.com/bins/zc2u9\";\r\nconst oridata = [\r\n  [\"Task\", \"Hours per Day\"],\r\n  [\"Alert closures\", 11],\r\n  [\"Reports\", 2],\r\n  [\"Trainings\", 2],\r\n  [\"Meetings\", 2],\r\n  [\"Exception handling\", 7]\r\n];\r\n\r\nexport default class PieChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(`${piechartdata}`)\r\n      .then(d => d.json())\r\n      .then(result => {\r\n        this.setState({\r\n          data: result\r\n        })\r\n      })\r\n  }\r\n\r\n  render() {\r\n    const { data } = this.state;\r\n    return (\r\n      <div>\r\n        <Chart\r\n          width={\"100%\"}\r\n          height={\"350px\"}\r\n          chartType=\"PieChart\"\r\n          loader={<div><Spinner color=\"info\" /></div>}\r\n          data={data}\r\n          options={{\r\n            title: \"Daily Activities\",\r\n            // Just add this option\r\n            pieHole: 0.6,\r\n            backgroundColor: \"black\",\r\n            titleTextStyle: { color: \"white\" },\r\n            legendTextStyle: { color: \"white\" },\r\n            legend: { position: \"top\", maxLines: \"5\" }\r\n          }}\r\n          rootProps={{ \"data-testid\": \"3\" }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}